import React, { useState, useEffect } from 'react';
import { useTranslation } from '../../utils/translations';

const PWAStatus = () => {
  // const { t } = useTranslation(); // –ü–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –Ω–æ –æ—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è –±—É–¥—É—â–µ–≥–æ
  const [pwaStatus, setPwaStatus] = useState({
    isInstalled: false,
    isOnline: navigator.onLine,
    swRegistered: false,
    updateAvailable: false,
    cacheStatus: 'unknown'
  });
  const [showInstallPrompt, setShowInstallPrompt] = useState(false);
  const [deferredPrompt, setDeferredPrompt] = useState(null);

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Service Worker
    if ('serviceWorker' in navigator) {
      navigator.serviceWorker.ready.then(() => {
        setPwaStatus(prev => ({ ...prev, swRegistered: true }));
      });

      // –°–ª—É—à–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç Service Worker
      navigator.serviceWorker.addEventListener('message', (event) => {
        if (event.data.type === 'BACKGROUND_SYNC_COMPLETE') {
          setPwaStatus(prev => ({ ...prev, cacheStatus: 'updated' }));
          setTimeout(() => {
            setPwaStatus(prev => ({ ...prev, cacheStatus: 'active' }));
          }, 3000);
        }
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    const isStandalone = window.matchMedia('(display-mode: standalone)').matches || 
                        window.navigator.standalone === true;
    setPwaStatus(prev => ({ ...prev, isInstalled: isStandalone }));

    // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏–µ beforeinstallprompt
    const handleBeforeInstallPrompt = (e) => {
      e.preventDefault();
      setDeferredPrompt(e);
      setShowInstallPrompt(true);
    };

    // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å–∞
    const handleOnline = () => setPwaStatus(prev => ({ ...prev, isOnline: true }));
    const handleOffline = () => setPwaStatus(prev => ({ ...prev, isOnline: false }));

    window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt);
    window.addEventListener('online', handleOnline);
    window.addEventListener('offline', handleOffline);

    return () => {
      window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt);
      window.removeEventListener('online', handleOnline);
      window.removeEventListener('offline', handleOffline);
    };
  }, []);

  const handleInstallPWA = async () => {
    if (deferredPrompt) {
      deferredPrompt.prompt();
      const { outcome } = await deferredPrompt.userChoice;
      
      if (outcome === 'accepted') {
        setShowInstallPrompt(false);
        setPwaStatus(prev => ({ ...prev, isInstalled: true }));
      }
      
      setDeferredPrompt(null);
    }
  };

  const clearCache = async () => {
    if ('serviceWorker' in navigator && navigator.serviceWorker.controller) {
      const messageChannel = new MessageChannel();
      messageChannel.port1.onmessage = (event) => {
        if (event.data.success) {
          window.location.reload();
        }
      };
      
      navigator.serviceWorker.controller.postMessage(
        { type: 'CLEAR_CACHE' },
        [messageChannel.port2]
      );
    }
  };

  // –ú–∏–Ω–∏-–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–∞—Ç—É—Å–∞
  const MiniStatus = () => (
    <div className="flex items-center space-x-2 text-xs">
      {/* –û–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å */}
      <div className={`w-2 h-2 rounded-full ${
        pwaStatus.isOnline ? 'bg-green-500' : 'bg-red-500'
      }`} title={pwaStatus.isOnline ? '–û–Ω–ª–∞–π–Ω' : '–û—Ñ—Ñ–ª–∞–π–Ω'} />
      
      {/* PWA —Å—Ç–∞—Ç—É—Å */}
      {pwaStatus.isInstalled && (
        <span className="text-blue-600 dark:text-blue-400" title="–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–∞–∫ PWA">
          üì±
        </span>
      )}
      
      {/* Service Worker —Å—Ç–∞—Ç—É—Å */}
      {pwaStatus.swRegistered && (
        <span className="text-green-600 dark:text-green-400" title="Service Worker –∞–∫—Ç–∏–≤–µ–Ω">
          ‚ö°
        </span>
      )}
    </div>
  );

  // –ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
  const FullStatus = ({ showDetailed = false }) => (
    <div className="bg-white dark:bg-gray-800 rounded-lg p-4 border border-gray-200 dark:border-gray-700">
      <h3 className="text-lg font-semibold text-gray-800 dark:text-white mb-3 flex items-center">
        üß≠ PWA –°—Ç–∞—Ç—É—Å
      </h3>
      
      <div className="space-y-3">
        {/* –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å */}
        <div className="flex items-center justify-between">
          <span className="text-sm text-gray-600 dark:text-gray-300">–°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:</span>
          <span className={`text-sm font-medium flex items-center space-x-1 ${
            pwaStatus.isOnline ? 'text-green-600' : 'text-red-600'
          }`}>
            <div className={`w-2 h-2 rounded-full ${
              pwaStatus.isOnline ? 'bg-green-500' : 'bg-red-500'
            }`} />
            <span>{pwaStatus.isOnline ? '–û–Ω–ª–∞–π–Ω' : '–û—Ñ—Ñ–ª–∞–π–Ω'}</span>
          </span>
        </div>

        {/* –°—Ç–∞—Ç—É—Å —É—Å—Ç–∞–Ω–æ–≤–∫–∏ */}
        <div className="flex items-center justify-between">
          <span className="text-sm text-gray-600 dark:text-gray-300">PWA —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:</span>
          <span className={`text-sm font-medium ${
            pwaStatus.isInstalled ? 'text-green-600' : 'text-gray-600'
          }`}>
            {pwaStatus.isInstalled ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}
          </span>
        </div>

        {/* Service Worker */}
        <div className="flex items-center justify-between">
          <span className="text-sm text-gray-600 dark:text-gray-300">Service Worker:</span>
          <span className={`text-sm font-medium ${
            pwaStatus.swRegistered ? 'text-green-600' : 'text-red-600'
          }`}>
            {pwaStatus.swRegistered ? '‚ö° –ê–∫—Ç–∏–≤–µ–Ω' : '‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}
          </span>
        </div>

        {/* –°—Ç–∞—Ç—É—Å –∫—ç—à–∞ */}
        <div className="flex items-center justify-between">
          <span className="text-sm text-gray-600 dark:text-gray-300">–°—Ç–∞—Ç—É—Å –∫—ç—à–∞:</span>
          <span className="text-sm font-medium text-blue-600">
            {pwaStatus.cacheStatus === 'updated' && 'üîÑ –û–±–Ω–æ–≤–ª–µ–Ω'}
            {pwaStatus.cacheStatus === 'active' && 'üíæ –ê–∫—Ç–∏–≤–µ–Ω'}
            {pwaStatus.cacheStatus === 'unknown' && '‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'}
          </span>
        </div>

        {/* –î–µ–π—Å—Ç–≤–∏—è */}
        {showDetailed && (
          <div className="pt-3 border-t border-gray-200 dark:border-gray-700 space-y-2">
            {!pwaStatus.isInstalled && showInstallPrompt && (
              <button
                onClick={handleInstallPWA}
                className="w-full bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm transition-colors duration-200"
              >
                üì± –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
              </button>
            )}
            
            <button
              onClick={clearCache}
              className="w-full bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-lg text-sm transition-colors duration-200"
            >
              üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à
            </button>
          </div>
        )}
      </div>
    </div>
  );

  // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ñ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–µ
  const OfflineNotification = () => (
    !pwaStatus.isOnline && (
      <div className="fixed top-16 left-4 right-4 z-50 bg-yellow-500 text-white p-3 rounded-lg shadow-lg animate-pulse">
        <div className="flex items-center space-x-2">
          <span>‚ö†Ô∏è</span>
          <span className="text-sm font-medium">
            –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É. –†–∞–±–æ—Ç–∞–µ–º –≤ –æ—Ñ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–µ.
          </span>
        </div>
      </div>
    )
  );

  return {
    MiniStatus,
    FullStatus,
    OfflineNotification,
    pwaStatus,
    showInstallPrompt,
    handleInstallPWA
  };
};

export default PWAStatus; 