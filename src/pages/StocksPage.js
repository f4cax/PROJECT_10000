import React, { useState, useEffect } from 'react';
// import { useTranslation } from '../utils/translations'; // TODO: –¥–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥—ã –ø–æ–∑–∂–µ

export default function StocksPage() {
  // const { t } = useTranslation(); // TODO: –¥–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥—ã –ø–æ–∑–∂–µ
  const [stockData, setStockData] = useState({});
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [selectedStock, setSelectedStock] = useState('AAPL');
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —Å–ª–æ–∂–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞
  const [calculator, setCalculator] = useState({
    initialAmount: 100000,
    monthlyContribution: 10000,
    annualReturn: 10,
    years: 10
  });

  // –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∞–∫—Ü–∏–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
  const popularStocks = [
    { symbol: 'AAPL', name: 'Apple Inc.', sector: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏' },
    { symbol: 'GOOGL', name: 'Alphabet Inc.', sector: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏' },
    { symbol: 'MSFT', name: 'Microsoft Corp.', sector: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏' },
    { symbol: 'TSLA', name: 'Tesla Inc.', sector: '–ê–≤—Ç–æ–º–æ–±–∏–ª–∏' },
    { symbol: 'AMZN', name: 'Amazon.com Inc.', sector: 'E-commerce' },
    { symbol: 'NVDA', name: 'NVIDIA Corp.', sector: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏' }
  ];

  // –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
  const majorIndices = [
    { symbol: 'SPY', name: 'S&P 500 ETF', description: '–¢–æ–ø-500 –∫–æ–º–ø–∞–Ω–∏–π –°–®–ê' },
    { symbol: 'QQQ', name: 'NASDAQ-100 ETF', description: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏' },
    { symbol: 'VTI', name: 'Total Stock Market ETF', description: '–í–µ—Å—å —Ä—ã–Ω–æ–∫ –°–®–ê' }
  ];

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∞–∫—Ü–∏–π (–¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ, —Ç.–∫. –Ω—É–∂–µ–Ω API –∫–ª—é—á)
  useEffect(() => {
    const fetchStockData = async () => {
      try {
        setLoading(true);
        
        // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
        // –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã –∑–∞–ø—Ä–æ—Å –∫ Alpha Vantage API
        const demoData = {
          'AAPL': {
            price: 175.43,
            change: 2.15,
            changePercent: 1.24,
            volume: '45,123,456',
            marketCap: '2.7T',
            pe: 28.5,
            high52w: 198.23,
            low52w: 124.17
          },
          'GOOGL': {
            price: 2456.78,
            change: -12.34,
            changePercent: -0.50,
            volume: '1,234,567',
            marketCap: '1.6T',
            pe: 25.3,
            high52w: 2800.12,
            low52w: 2025.34
          },
          'MSFT': {
            price: 345.67,
            change: 5.23,
            changePercent: 1.53,
            volume: '23,456,789',
            marketCap: '2.5T',
            pe: 32.1,
            high52w: 384.30,
            low52w: 245.18
          },
          'TSLA': {
            price: 234.56,
            change: -8.90,
            changePercent: -3.65,
            volume: '67,890,123',
            marketCap: '745B',
            pe: 45.2,
            high52w: 414.50,
            low52w: 152.37
          },
          'AMZN': {
            price: 3123.45,
            change: 15.67,
            changePercent: 0.50,
            volume: '3,456,789',
            marketCap: '1.3T',
            pe: 58.7,
            high52w: 3773.08,
            low52w: 2671.45
          },
          'NVDA': {
            price: 456.78,
            change: 12.34,
            changePercent: 2.78,
            volume: '45,678,901',
            marketCap: '1.1T',
            pe: 65.4,
            high52w: 502.66,
            low52w: 180.68
          }
        };

        setStockData(demoData);
        setError(null);
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∞–∫—Ü–∏–π:', err);
        setError(err.message);
      } finally {
        setLoading(false);
      }
    };

    fetchStockData();
  }, []);

  // –†–∞—Å—á–µ—Ç —Å–ª–æ–∂–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞
  const calculateCompoundInterest = () => {
    const { initialAmount, monthlyContribution, annualReturn, years } = calculator;
    const monthlyRate = annualReturn / 100 / 12;
    const totalMonths = years * 12;
    
    // –§–æ—Ä–º—É–ª–∞ –¥–ª—è —Å–ª–æ–∂–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ —Å –µ–∂–µ–º–µ—Å—è—á–Ω—ã–º–∏ –≤–∑–Ω–æ—Å–∞–º–∏
    const futureValue = initialAmount * Math.pow(1 + monthlyRate, totalMonths) +
      monthlyContribution * ((Math.pow(1 + monthlyRate, totalMonths) - 1) / monthlyRate);
    
    const totalContributions = initialAmount + (monthlyContribution * totalMonths);
    const totalGain = futureValue - totalContributions;
    
    return {
      futureValue: Math.round(futureValue),
      totalContributions: Math.round(totalContributions),
      totalGain: Math.round(totalGain)
    };
  };

  const formatNumber = (num) => {
    return new Intl.NumberFormat('ru-RU').format(num);
  };

  const formatCurrency = (num) => {
    return new Intl.NumberFormat('en-US', {
      style: 'currency',
      currency: 'USD',
      minimumFractionDigits: 2
    }).format(num);
  };

  const results = calculateCompoundInterest();

  if (loading) {
    return (
      <div className="max-w-6xl mx-auto space-y-8 fade-in">
        <div className="text-center">
          <h1 className="text-4xl font-bold text-gray-900 mb-4">üìà –ê–∫—Ü–∏–∏ –∏ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏</h1>
          <div className="text-lg text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Ä—ã–Ω–∫–∞...</div>
        </div>
        <div className="card text-center">
          <div className="animate-spin text-4xl mb-4">‚è≥</div>
          <p className="text-gray-600">–ü–æ–ª—É—á–∞–µ–º —Å–≤–µ–∂–∏–µ –∫–æ—Ç–∏—Ä–æ–≤–∫–∏</p>
        </div>
      </div>
    );
  }

  return (
    <div className="max-w-6xl mx-auto space-y-8 fade-in">
      <div className="text-center">
        <h1 className="text-4xl font-bold text-gray-900 mb-4">
          üìà –ê–∫—Ü–∏–∏ –∏ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏
        </h1>
        <p className="text-lg text-gray-600">
          –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫–æ—Ç–∏—Ä–æ–≤–∫–∏, –∞–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞ –∏ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å–ª–æ–∂–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞
        </p>
        {error && (
          <div className="mt-2 text-sm text-orange-600">
            –î–µ–º–æ-—Ä–µ–∂–∏–º: –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
          </div>
        )}
      </div>

      {/* –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∞–∫—Ü–∏–∏ */}
      <div className="space-y-4">
        <h2 className="text-2xl font-semibold text-gray-900">üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∞–∫—Ü–∏–∏</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          {popularStocks.map(stock => {
            const data = stockData[stock.symbol];
            if (!data) return null;

            const isPositive = data.change > 0;
            return (
              <div key={stock.symbol} className="card hover:shadow-lg transition-shadow cursor-pointer"
                   onClick={() => setSelectedStock(stock.symbol)}>
                <div className="flex justify-between items-start mb-3">
                  <div>
                    <h3 className="font-bold text-lg">{stock.symbol}</h3>
                    <p className="text-sm text-gray-600">{stock.name}</p>
                    <span className="text-xs bg-gray-100 px-2 py-1 rounded">{stock.sector}</span>
                  </div>
                  <div className={`text-sm font-medium ${isPositive ? 'text-green-600' : 'text-red-600'}`}>
                    {isPositive ? '‚Üó' : '‚Üò'} {Math.abs(data.changePercent).toFixed(2)}%
                  </div>
                </div>
                
                <div className="text-right">
                  <div className="text-2xl font-bold text-gray-900">
                    {formatCurrency(data.price)}
                  </div>
                  <div className={`text-sm ${isPositive ? 'text-green-600' : 'text-red-600'}`}>
                    {isPositive ? '+' : ''}{formatCurrency(data.change)}
                  </div>
                  <div className="text-xs text-gray-500 mt-1">
                    –û–±—ä–µ–º: {data.volume}
                  </div>
                </div>
              </div>
            );
          })}
        </div>
      </div>

      {/* –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∞–∫—Ü–∏–∏ */}
      {selectedStock && stockData[selectedStock] && (
        <div className="card">
          <h3 className="text-xl font-semibold text-gray-900 mb-4">
            üìä –î–µ—Ç–∞–ª–∏: {selectedStock}
          </h3>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            <div className="text-center">
              <div className="text-2xl font-bold text-primary-600">
                {formatCurrency(stockData[selectedStock].price)}
              </div>
              <p className="text-sm text-gray-600">–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞</p>
            </div>
            <div className="text-center">
              <div className="text-lg font-semibold">
                {stockData[selectedStock].marketCap}
              </div>
              <p className="text-sm text-gray-600">–ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è</p>
            </div>
            <div className="text-center">
              <div className="text-lg font-semibold">
                {stockData[selectedStock].pe}
              </div>
              <p className="text-sm text-gray-600">P/E –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç</p>
            </div>
            <div className="text-center">
              <div className="text-lg font-semibold">
                {formatCurrency(stockData[selectedStock].high52w)}
              </div>
              <p className="text-sm text-gray-600">–ú–∞–∫—Å–∏–º—É–º –∑–∞ –≥–æ–¥</p>
            </div>
          </div>
        </div>
      )}

      {/* –ò–Ω–¥–µ–∫—Å–Ω—ã–µ —Ñ–æ–Ω–¥—ã */}
      <div className="space-y-4">
        <h2 className="text-2xl font-semibold text-gray-900">üìä –ò–Ω–¥–µ–∫—Å–Ω—ã–µ —Ñ–æ–Ω–¥—ã</h2>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          {majorIndices.map(index => (
            <div key={index.symbol} className="card text-center">
              <h3 className="font-bold text-lg mb-2">{index.name}</h3>
              <p className="text-sm text-gray-600 mb-3">{index.description}</p>
              <div className="text-primary-600 font-semibold">
                –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å {index.symbol}
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å–ª–æ–∂–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ */}
      <div className="card">
        <h3 className="text-2xl font-semibold text-gray-900 mb-6">
          üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å–ª–æ–∂–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞
        </h3>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
          {/* –í–≤–æ–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ */}
          <div className="space-y-4">
            <div>
              <label className="label">–ù–∞—á–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ (‚ÇΩ)</label>
              <input
                type="number"
                value={calculator.initialAmount}
                onChange={(e) => setCalculator({...calculator, initialAmount: Number(e.target.value)})}
                className="input-field"
                placeholder="100000"
              />
            </div>
            
            <div>
              <label className="label">–ï–∂–µ–º–µ—Å—è—á–Ω–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ (‚ÇΩ)</label>
              <input
                type="number"
                value={calculator.monthlyContribution}
                onChange={(e) => setCalculator({...calculator, monthlyContribution: Number(e.target.value)})}
                className="input-field"
                placeholder="10000"
              />
            </div>
            
            <div>
              <label className="label">–ì–æ–¥–æ–≤–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å (%)</label>
              <input
                type="number"
                step="0.1"
                value={calculator.annualReturn}
                onChange={(e) => setCalculator({...calculator, annualReturn: Number(e.target.value)})}
                className="input-field"
                placeholder="10"
              />
            </div>
            
            <div>
              <label className="label">–ü–µ—Ä–∏–æ–¥ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–ª–µ—Ç)</label>
              <input
                type="number"
                value={calculator.years}
                onChange={(e) => setCalculator({...calculator, years: Number(e.target.value)})}
                className="input-field"
                placeholder="10"
              />
            </div>
          </div>

          {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã */}
          <div className="space-y-4">
            <div className="bg-green-50 p-4 rounded-lg">
              <h4 className="font-semibold text-green-900 mb-3">üìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</h4>
              
              <div className="space-y-3">
                <div className="flex justify-between">
                  <span className="text-green-700">–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞:</span>
                  <span className="font-bold text-green-900">
                    {formatNumber(results.futureValue)} ‚ÇΩ
                  </span>
                </div>
                
                <div className="flex justify-between">
                  <span className="text-green-700">–í—Å–µ–≥–æ –≤–ª–æ–∂–µ–Ω–æ:</span>
                  <span className="font-semibold text-green-800">
                    {formatNumber(results.totalContributions)} ‚ÇΩ
                  </span>
                </div>
                
                <div className="flex justify-between border-t pt-2">
                  <span className="text-green-700">–ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å:</span>
                  <span className="font-bold text-green-900 text-lg">
                    +{formatNumber(results.totalGain)} ‚ÇΩ
                  </span>
                </div>
              </div>
            </div>

            <div className="bg-blue-50 p-3 rounded-lg">
              <p className="text-blue-800 text-sm">
                üí° <strong>–°–æ–≤–µ—Ç:</strong> –ù–∞—á–Ω–∏—Ç–µ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ –º–æ–∂–Ω–æ —Ä–∞–Ω—å—à–µ. 
                –°–ª–æ–∂–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –ª—É—á—à–µ –≤—Å–µ–≥–æ –ø—Ä–∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ–º –≥–æ—Ä–∏–∑–æ–Ω—Ç–µ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
              </p>
            </div>
          </div>
        </div>
      </div>

      {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div className="card bg-blue-50 border-blue-200">
          <h4 className="font-semibold text-blue-900 mb-3">üéØ –î–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤</h4>
          <ul className="text-sm text-blue-800 space-y-2">
            <li>‚Ä¢ –ù–∞—á–Ω–∏—Ç–µ —Å –∏–Ω–¥–µ–∫—Å–Ω—ã—Ö —Ñ–æ–Ω–¥–æ–≤ (S&P 500, NASDAQ)</li>
            <li>‚Ä¢ –ò–Ω–≤–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ, –∞ –Ω–µ –ø—ã—Ç–∞–π—Ç–µ—Å—å —É–≥–∞–¥–∞—Ç—å –≤—Ä–µ–º—è</li>
            <li>‚Ä¢ –î–∏–≤–µ—Ä—Å–∏—Ñ–∏—Ü–∏—Ä—É–π—Ç–µ –ø–æ—Ä—Ç—Ñ–µ–ª—å –ø–æ —Å–µ–∫—Ç–æ—Ä–∞–º</li>
            <li>‚Ä¢ –ù–µ –ø–∞–Ω–∏–∫—É–π—Ç–µ –ø—Ä–∏ –∫—Ä–∞—Ç–∫–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–∞–¥–µ–Ω–∏—è—Ö</li>
            <li>‚Ä¢ –ò–∑—É—á–∞–π—Ç–µ –æ—Å–Ω–æ–≤—ã —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç–∏</li>
          </ul>
        </div>
        
        <div className="card bg-orange-50 border-orange-200">
          <h4 className="font-semibold text-orange-900 mb-3">‚ö†Ô∏è –í–∞–∂–Ω—ã–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è</h4>
          <ul className="text-sm text-orange-800 space-y-2">
            <li>‚Ä¢ –ü—Ä–æ—à–ª–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –±—É–¥—É—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã</li>
            <li>‚Ä¢ –ò–Ω–≤–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ç–æ–ª—å–∫–æ —Ç–µ –¥–µ–Ω—å–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ –≥–æ—Ç–æ–≤—ã –ø–æ—Ç–µ—Ä—è—Ç—å</li>
            <li>‚Ä¢ –í—ã—Å–æ–∫–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –≤—Å–µ–≥–¥–∞ —Å–≤—è–∑–∞–Ω–∞ —Å –≤—ã—Å–æ–∫–∏–º–∏ —Ä–∏—Å–∫–∞–º–∏</li>
            <li>‚Ä¢ –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —Å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º —Å–æ–≤–µ—Ç–Ω–∏–∫–æ–º</li>
            <li>‚Ä¢ –ò–∑—É—á–∏—Ç–µ –Ω–∞–ª–æ–≥–æ–≤—ã–µ –∞—Å–ø–µ–∫—Ç—ã –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</li>
          </ul>
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± API */}
      <div className="card bg-gradient-to-r from-purple-50 to-pink-50 border-purple-200">
        <div className="text-center">
          <h3 className="text-lg font-semibold text-purple-900 mb-2">
            üîå –î–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã Alpha Vantage API
          </h3>
          <p className="text-purple-700 text-sm mb-3">
            –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç—Ä–µ–π–¥–µ—Ä–æ–≤ –∏ –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤
          </p>
          <div className="flex justify-center space-x-4 text-xs text-purple-600">
            <span>‚úÖ –†–µ–∞–ª—å–Ω—ã–µ –∫–æ—Ç–∏—Ä–æ–≤–∫–∏</span>
            <span>‚úÖ –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ</span>
            <span>‚úÖ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã</span>
            <span>‚úÖ –ù–æ–≤–æ—Å—Ç–∏ —Ä—ã–Ω–∫–∞</span>
          </div>
          <p className="text-xs text-purple-500 mt-2">
            –°–µ–π—á–∞—Å –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –∫–æ—Ç–∏—Ä–æ–≤–æ–∫ –Ω—É–∂–µ–Ω API –∫–ª—é—á.
          </p>
        </div>
      </div>
    </div>
  );
} 