import React, { useState, useEffect } from 'react';
import BudgetChart from '../components/charts/BudgetChart';
import BudgetRuleCard from '../components/forms/BudgetRuleCard';
import IncomeForm from '../components/forms/IncomeForm';
import NotificationCard from '../components/common/NotificationCard';
import FinancialStrategyCard from '../components/forms/FinancialStrategyCard';
import SavingsGoalCard from '../components/forms/SavingsGoalCard';
import { useTranslation } from '../utils/translations';
import { useAuth } from '../contexts/AuthContext';

export default function HomePage() {
  const { t } = useTranslation();
  const { saveMonthlyIncome, saveStrategy, isAuthenticated, user } = useAuth();
  const [monthlyIncome, setMonthlyIncome] = useState(0);
  const [budgetDistribution, setBudgetDistribution] = useState({
    needs: 0,        // 50% - –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã
    safety: 0,       // 25% - –ü–æ–¥—É—à–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏  
    investments: 0,  // 15% - –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏
    wants: 0         // 10% - –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è –∏ –∂–µ–ª–∞–Ω–∏—è
  });
  const [notifications, setNotifications] = useState([]);
  const [selectedStrategy, setSelectedStrategy] = useState(null);
  const [savingsGoal, setSavingsGoal] = useState(null);

  // –ü—Ä–∞–≤–∏–ª–æ 50-25-15-10 Mark Tilbury
  const calculateBudget = (income) => {
    return {
      needs: Math.round(income * 0.50),
      safety: Math.round(income * 0.25),
      investments: Math.round(income * 0.15),
      wants: Math.round(income * 0.10)
    };
  };

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏ —Å–æ–≤–µ—Ç–æ–≤ —Å —É—á—ë—Ç–æ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
  const generateNotifications = (income, budget, strategy, goal) => {
    const notifications = [];

    if (income < 30000) {
      notifications.push({
        id: 1,
        type: 'warning',
        title: t('language') === 'ru' ? '–ù–∏–∑–∫–∏–π –¥–æ—Ö–æ–¥' : 'Low Income',
        message: t('lowIncomeWarning'),
        icon: '‚ö†Ô∏è'
      });
    }

    if (income > 100000) {
      notifications.push({
        id: 2,
        type: 'success',
        title: t('language') === 'ru' ? '–û—Ç–ª–∏—á–Ω—ã–π –¥–æ—Ö–æ–¥!' : 'Great Income!',
        message: t('highIncomeAdvice'),
        icon: 'üí™'
      });
    }

    if (budget.wants > 10000) {
      notifications.push({
        id: 3,
        type: 'danger',
        title: t('language') === 'ru' ? '–ú–Ω–æ–≥–æ —Ç—Ä–∞—Ç –Ω–∞ –∂–µ–ª–∞–Ω–∏—è' : 'High Entertainment Spending',
        message: t('highSpendingWarning'),
        icon: 'üö®'
      });
    }

    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
    if (strategy) {
      const expectedReturn = getExpectedReturn(strategy.id);
      const monthlyReturn = budget.investments * (expectedReturn / 100 / 12);
      const yearlyProjection = budget.investments * 12 * (1 + expectedReturn / 100);
      
      notifications.push({
        id: 4,
        type: 'info',
        title: `–ü—Ä–æ–≥–Ω–æ–∑ –¥–ª—è ${strategy.title.toLowerCase()}`,
        message: `–ü—Ä–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ "${strategy.title}" –≤–∞—à–∏ ${budget.investments.toLocaleString()} —Ä—É–± –≤ –º–µ—Å—è—Ü –º–æ–≥—É—Ç –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å—Å—è –≤ ~${Math.round(yearlyProjection).toLocaleString()} —Ä—É–± —á–µ—Ä–µ–∑ –≥–æ–¥ (${strategy.expectedReturn}).`,
        icon: strategy.icon
      });

      // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø–æ —Ä–∏—Å–∫–∞–º
      if (strategy.id === 'aggressive' && income < 50000) {
        notifications.push({
          id: 5,
          type: 'warning',
          title: '–í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫ –ø—Ä–∏ –Ω–∏–∑–∫–æ–º –¥–æ—Ö–æ–¥–µ',
          message: '–†–∏—Å–∫–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–ª–∏—à–∫–æ–º —Å—Ç—Ä–µ—Å—Å–æ–≤–æ–π –ø—Ä–∏ –¥–æ—Ö–æ–¥–µ –º–µ–Ω–µ–µ 50,000 —Ä—É–±. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ —É–º–µ—Ä–µ–Ω–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é.',
          icon: '‚ö†Ô∏è'
        });
      }
    }

    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ —Ü–µ–ª–∏
    if (goal && budget.safety > 0) {
      const monthsToGoal = Math.ceil((goal.targetAmount - goal.currentAmount) / budget.safety);
      notifications.push({
        id: 6,
        type: 'success',
        title: `–ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ —Ü–µ–ª–∏ "${goal.title}"`,
        message: `–û—Ç–∫–ª–∞–¥—ã–≤–∞—è ${budget.safety.toLocaleString()} —Ä—É–± –≤ –º–µ—Å—è—Ü, –≤—ã –¥–æ—Å—Ç–∏–≥–Ω–µ—Ç–µ —Ü–µ–ª–∏ —á–µ—Ä–µ–∑ ${monthsToGoal} ${monthsToGoal === 1 ? '–º–µ—Å—è—Ü' : monthsToGoal < 5 ? '–º–µ—Å—è—Ü–∞' : '–º–µ—Å—è—Ü–µ–≤'}!`,
        icon: 'üéØ'
      });
    }

    return notifications;
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–∂–∏–¥–∞–µ–º–æ–π –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ –ø–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
  const getExpectedReturn = (strategyId) => {
    switch (strategyId) {
      case 'conservative': return 6.5; // 5-8% —Å—Ä–µ–¥–Ω–µ–µ 6.5%
      case 'moderate': return 10; // 8-12% —Å—Ä–µ–¥–Ω–µ–µ 10%
      case 'aggressive': return 18; // 12-25% —Å—Ä–µ–¥–Ω–µ–µ 18%
      default: return 10;
    }
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  useEffect(() => {
    if (isAuthenticated && user?.financialData) {
      const data = user.financialData;
      if (data.monthlyIncome) {
        setMonthlyIncome(data.monthlyIncome);
      }
      if (data.budgetDistribution) {
        setBudgetDistribution(data.budgetDistribution);
      }
      if (data.selectedStrategy) {
        // –ù–∞–π—Ç–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –ø–æ ID
        const strategies = [
          { id: 'conservative', title: '–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è' },
          { id: 'moderate', title: '–£–º–µ—Ä–µ–Ω–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è' },
          { id: 'aggressive', title: '–ê–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è' }
        ];
        const strategy = strategies.find(s => s.id === data.selectedStrategy);
        setSelectedStrategy(strategy);
      }
      if (data.savingsGoals && data.savingsGoals.length > 0) {
        setSavingsGoal(data.savingsGoals[0]); // –ü–æ–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –æ–¥–Ω—É —Ü–µ–ª—å
      }
    }
  }, [isAuthenticated, user]);

  useEffect(() => {
    if (monthlyIncome > 0) {
      const budget = calculateBudget(monthlyIncome);
      setBudgetDistribution(budget);
      setNotifications(generateNotifications(monthlyIncome, budget, selectedStrategy, savingsGoal));
      
      // –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
      if (isAuthenticated) {
        saveMonthlyIncome(monthlyIncome, budget);
      }
    }
  }, [monthlyIncome, selectedStrategy, savingsGoal, isAuthenticated]);

  // –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
  useEffect(() => {
    if (selectedStrategy && isAuthenticated) {
      saveStrategy(selectedStrategy);
    }
  }, [selectedStrategy, isAuthenticated]);

  return (
    <div className="space-y-8 fade-in">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="text-center">
        <h1 className="text-4xl font-bold text-gray-900 mb-4">
          üí∞ {t('financialManagement')}
        </h1>
        <p className="text-lg text-gray-600 max-w-2xl mx-auto">
          {t('budgetDistributionRule')} <span className="font-semibold text-primary-600">50-25-15-10</span> {t('fromMarkTilbury')}
        </p>
      </div>

      {/* –§–æ—Ä–º–∞ –≤–≤–æ–¥–∞ –¥–æ—Ö–æ–¥–∞ */}
      <div className="max-w-md mx-auto">
        <IncomeForm 
          monthlyIncome={monthlyIncome}
          setMonthlyIncome={setMonthlyIncome}
        />
      </div>

      {monthlyIncome > 0 && (
        <>
          {/* –ö–∞—Ä—Ç–æ—á–∫–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –±—é–¥–∂–µ—Ç–∞ */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            <BudgetRuleCard
              title={t('essentialExpenses')}
              subtitle={`50${t('percentFromIncome')}`}
              amount={budgetDistribution.needs}
              color="bg-gray-500"
              description={t('essentialDesc')}
              icon="üè†"
            />
            <BudgetRuleCard
              title={t('emergencyFund')}
              subtitle={`25${t('percentFromIncome')}`}
              amount={budgetDistribution.safety}
              color="bg-primary-500"
              description={t('emergencyDesc')}
              icon="üõ°Ô∏è"
            />
            <BudgetRuleCard
              title={t('investments')}
              subtitle={`15${t('percentFromIncome')}`}
              amount={budgetDistribution.investments}
              color="bg-green-500"
              description={selectedStrategy ? `${selectedStrategy.description}` : t('investmentsDesc')}
              icon="üìà"
            />
            <BudgetRuleCard
              title={t('entertainment')}
              subtitle={`10${t('percentFromIncome')}`}
              amount={budgetDistribution.wants}
              color="bg-danger-500"
              description={t('entertainmentDesc')}
              icon="üéâ"
            />
          </div>

          {/* –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è */}
          <FinancialStrategyCard
            selectedStrategy={selectedStrategy}
            onStrategyChange={setSelectedStrategy}
          />

          {/* –¶–µ–ª–∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è */}
          <SavingsGoalCard
            goal={savingsGoal}
            onGoalChange={setSavingsGoal}
            monthlyBudget={budgetDistribution}
          />

          {/* –î–∏–∞–≥—Ä–∞–º–º–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è */}
          <div className="max-w-2xl mx-auto">
            <div className="card">
              <h3 className="text-xl font-semibold text-gray-900 mb-4 text-center">
                {t('budgetVisualization')}
              </h3>
              <BudgetChart budgetDistribution={budgetDistribution} />
            </div>
          </div>

          {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
          {notifications.length > 0 && (
            <div className="space-y-4">
              <h3 className="text-xl font-semibold text-gray-900 text-center">
                üí° {t('personalRecommendations')}
              </h3>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                {notifications.map((notification) => (
                  <NotificationCard key={notification.id} notification={notification} />
                ))}
              </div>
            </div>
          )}

          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="card bg-gradient-to-r from-primary-50 to-blue-50 border-primary-200">
            <div className="text-center">
              <h3 className="text-lg font-semibold text-primary-900 mb-2">
                üéØ –ü—Ä–∞–≤–∏–ª–æ 50-25-15-10 –æ—Ç Mark Tilbury
              </h3>
              <p className="text-primary-700 text-sm">
                –≠—Ç–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω–∞—è –≤—Ä–µ–º–µ–Ω–µ–º —Ñ–æ—Ä–º—É–ª–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ —É—Å–ø–µ—Ö–∞. –°–ª–µ–¥—É—è —ç—Ç–æ–º—É –ø—Ä–∞–≤–∏–ª—É, 
                –≤—ã –æ–±–µ—Å–ø–µ—á–∏—Ç–µ —Å–µ–±–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –∏ —Å–æ–∑–¥–∞–¥–∏—Ç–µ –∫–∞–ø–∏—Ç–∞–ª –¥–ª—è –±—É–¥—É—â–µ–≥–æ.
              </p>
              <div className="mt-4 flex justify-center space-x-4 text-xs text-primary-600">
                <span>‚úÖ –ü–æ–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö –Ω—É–∂–¥</span>
                <span>‚úÖ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ø–æ–¥—É—à–∫–∞</span>
                <span>‚úÖ –†–æ—Å—Ç –∫–∞–ø–∏—Ç–∞–ª–∞</span>
                <span>‚úÖ –ö–∞—á–µ—Å—Ç–≤–æ –∂–∏–∑–Ω–∏</span>
              </div>
            </div>
          </div>
        </>
      )}
    </div>
  );
} 